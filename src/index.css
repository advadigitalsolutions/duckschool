@tailwind base;
@tailwind components;
@tailwind utilities;

/* Print styles for PersonalityReport */
@media print {
  body * {
    visibility: hidden;
  }
  
  .print\:hidden {
    display: none !important;
  }
  
  /* Show only the report content when printing */
  [class*="PersonalityReport"], 
  [class*="PersonalityReport"] * {
    visibility: visible;
  }
  
  [class*="PersonalityReport"] {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
  }
  
  /* Adjust card styles for printing */
  .card {
    break-inside: avoid;
    page-break-inside: avoid;
    border: 1px solid #e5e7eb !important;
    box-shadow: none !important;
    margin-bottom: 1rem;
  }
  
  /* Remove shadows and adjust backgrounds */
  * {
    box-shadow: none !important;
    text-shadow: none !important;
  }
  
  /* Ensure gradient backgrounds print */
  [class*="gradient"] {
    -webkit-print-color-adjust: exact;
    print-color-adjust: exact;
    color-adjust: exact;
  }
  
  /* Adjust spacing for print */
  .space-y-6 > * + * {
    margin-top: 1rem !important;
  }
  
  /* Hide scroll areas borders */
  [class*="ScrollArea"] {
    overflow: visible !important;
    height: auto !important;
  }
}

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    /* Educational theme - calming blues and greens for focus */
    --background: 210 40% 98%;
    --foreground: 222 47% 11%;

    --card: 0 0% 100%;
    --card-foreground: 222 47% 11%;

    --popover: 0 0% 100%;
    --popover-foreground: 222 47% 11%;

    /* Primary - Deep blue for trust and focus */
    --primary: 217 91% 60%;
    --primary-foreground: 0 0% 100%;
    --primary-hover: 217 91% 52%;
    
    /* Secondary - Soft green for success and growth */
    --secondary: 142 76% 36%;
    --secondary-foreground: 0 0% 100%;
    
    /* Accent - Warm orange for highlights */
    --accent: 25 95% 53%;
    --accent-foreground: 0 0% 100%;

    --muted: 210 40% 96%;
    --muted-foreground: 215 16% 47%;

    /* Success, warning, destructive states */
    --success: 142 76% 36%;
    --success-foreground: 0 0% 100%;
    
    --warning: 38 92% 50%;
    --warning-foreground: 0 0% 100%;
    
    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 100%;

    --border: 214 32% 91%;
    --input: 214 32% 91%;
    --ring: 217 91% 60%;

    --radius: 0.75rem;

    /* Progress and gamification */
    --progress-bg: 210 40% 96%;
    --progress-fill: 217 91% 60%;
    
    /* Pomodoro timer colors */
    --timer-work: 217 91% 60%;
    --timer-break: 142 76% 36%;
    --timer-long-break: 38 92% 50%;

    /* Sidebar */
    --sidebar-background: 0 0% 100%;
    --sidebar-foreground: 222 47% 11%;
    --sidebar-primary: 217 91% 60%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 210 40% 96%;
    --sidebar-accent-foreground: 222 47% 11%;
    --sidebar-border: 214 32% 91%;
    --sidebar-ring: 217 91% 60%;
    
    /* Gradients for visual interest */
    --gradient-primary: linear-gradient(135deg, hsl(217 91% 60%), hsl(217 91% 52%));
    --gradient-success: linear-gradient(135deg, hsl(142 76% 36%), hsl(142 76% 28%));
    --gradient-hero: linear-gradient(135deg, hsl(217 91% 60%) 0%, hsl(142 76% 36%) 100%);
    
    /* Shadows */
    --shadow-sm: 0 1px 2px 0 hsl(222 47% 11% / 0.05);
    --shadow-md: 0 4px 6px -1px hsl(222 47% 11% / 0.1);
    --shadow-lg: 0 10px 15px -3px hsl(222 47% 11% / 0.1);
    --shadow-focus: 0 0 0 3px hsl(217 91% 60% / 0.3);
  }

  .dark {
    --background: 222 47% 11%;
    --foreground: 210 40% 98%;

    --card: 222 47% 13%;
    --card-foreground: 210 40% 98%;

    --popover: 222 47% 13%;
    --popover-foreground: 210 40% 98%;

    --primary: 217 91% 60%;
    --primary-foreground: 0 0% 100%;
    --primary-hover: 217 91% 68%;

    --secondary: 142 76% 36%;
    --secondary-foreground: 0 0% 100%;
    
    --accent: 25 95% 53%;
    --accent-foreground: 0 0% 100%;

    --muted: 217 33% 17%;
    --muted-foreground: 215 20% 65%;

    --success: 142 76% 36%;
    --success-foreground: 0 0% 100%;
    
    --warning: 38 92% 50%;
    --warning-foreground: 0 0% 100%;

    --destructive: 0 63% 31%;
    --destructive-foreground: 210 40% 98%;

    --border: 217 33% 17%;
    --input: 217 33% 17%;
    --ring: 217 91% 60%;
    
    --sidebar-background: 222 47% 13%;
    --sidebar-foreground: 210 40% 98%;
    --sidebar-primary: 217 91% 60%;
    --sidebar-primary-foreground: 0 0% 100%;
    --sidebar-accent: 217 33% 17%;
    --sidebar-accent-foreground: 210 40% 98%;
    --sidebar-border: 217 33% 17%;
    --sidebar-ring: 217 91% 60%;
    
    --shadow-sm: 0 1px 2px 0 hsl(0 0% 0% / 0.3);
    --shadow-md: 0 4px 6px -1px hsl(0 0% 0% / 0.4);
    --shadow-lg: 0 10px 15px -3px hsl(0 0% 0% / 0.5);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}

/* Accessibility Styles */
.dyslexia-font * {
  font-family: 'OpenDyslexic', sans-serif !important;
}

.line-spacing-relaxed * {
  line-height: 1.5 !important;
}

.line-spacing-spacious * {
  line-height: 2 !important;
}

.letter-spacing-wide * {
  letter-spacing: 0.05em !important;
}

.letter-spacing-wider * {
  letter-spacing: 0.1em !important;
}

/* Color Overlays */
:root.color-overlay-cream {
  --background: 38 20% 97%;
  --card: 38 20% 95%;
  --popover: 38 20% 95%;
  --muted: 38 20% 93%;
}

:root.color-overlay-mint {
  --background: 140 50% 97%;
  --card: 140 50% 95%;
  --popover: 140 50% 95%;
  --muted: 140 50% 93%;
}

:root.color-overlay-lavender {
  --background: 250 100% 97%;
  --card: 250 100% 95%;
  --popover: 250 100% 95%;
  --muted: 250 100% 93%;
}

:root.color-overlay-peach {
  --background: 20 100% 97%;
  --card: 20 100% 95%;
  --popover: 20 100% 95%;
  --muted: 20 100% 93%;
}

:root.color-overlay-aqua {
  --background: 200 100% 97%;
  --card: 200 100% 95%;
  --popover: 200 100% 95%;
  --muted: 200 100% 93%;
}

/* Dark mode color overlays */
.dark.color-overlay-cream {
  --background: 38 20% 15%;
  --card: 38 20% 17%;
  --popover: 38 20% 17%;
  --muted: 38 20% 20%;
}

.dark.color-overlay-mint {
  --background: 140 30% 15%;
  --card: 140 30% 17%;
  --popover: 140 30% 17%;
  --muted: 140 30% 20%;
}

.dark.color-overlay-lavender {
  --background: 250 40% 15%;
  --card: 250 40% 17%;
  --popover: 250 40% 17%;
  --muted: 250 40% 20%;
}

.dark.color-overlay-peach {
  --background: 20 40% 15%;
  --card: 20 40% 17%;
  --popover: 20 40% 17%;
  --muted: 20 40% 20%;
}

.dark.color-overlay-aqua {
  --background: 200 50% 15%;
  --card: 200 50% 17%;
  --popover: 200 50% 17%;
  --muted: 200 50% 20%;
}

/* High Contrast Mode - Improve readability with strong contrast */
.high-contrast {
  --background: 0 0% 100% !important;
  --foreground: 0 0% 0% !important;
  --card: 0 0% 100% !important;
  --card-foreground: 0 0% 0% !important;
  --popover: 0 0% 100% !important;
  --popover-foreground: 0 0% 0% !important;
  --primary: 221 83% 40% !important;
  --primary-foreground: 0 0% 100% !important;
  --secondary: 210 40% 95% !important;
  --secondary-foreground: 0 0% 0% !important;
  --muted: 210 40% 95% !important;
  --muted-foreground: 0 0% 0% !important;
  --accent: 210 40% 95% !important;
  --accent-foreground: 0 0% 0% !important;
  --border: 0 0% 0% !important;
  --input: 0 0% 100% !important;
  --ring: 221 83% 40% !important;
}

.high-contrast * {
  font-weight: 500 !important;
}

/* Only apply thicker borders to key interactive elements */
.high-contrast button,
.high-contrast input,
.high-contrast select,
.high-contrast textarea,
.high-contrast [role="button"] {
  border-width: 2px !important;
  border-color: hsl(var(--border)) !important;
}

.high-contrast .card,
.high-contrast [class*="Card"] {
  border-width: 2px !important;
  border-color: hsl(var(--border)) !important;
}

/* Dark mode high contrast */
.dark.high-contrast {
  --background: 0 0% 0% !important;
  --foreground: 0 0% 100% !important;
  --card: 0 0% 10% !important;
  --card-foreground: 0 0% 100% !important;
  --popover: 0 0% 10% !important;
  --popover-foreground: 0 0% 100% !important;
  --primary: 221 83% 60% !important;
  --primary-foreground: 0 0% 100% !important;
  --secondary: 210 40% 15% !important;
  --secondary-foreground: 0 0% 100% !important;
  --muted: 210 40% 15% !important;
  --muted-foreground: 0 0% 100% !important;
  --accent: 210 40% 15% !important;
  --accent-foreground: 0 0% 100% !important;
  --border: 0 0% 100% !important;
  --input: 0 0% 10% !important;
  --ring: 221 83% 60% !important;
}

/* Focus Mode - Hover-based card highlighting with yellow glow */
:root {
  --focus-glow-intensity: 1;
}

/* Shimmer animation removed - keeping cards static while maintaining glow */

.focus-mode {
  position: relative;
  isolation: isolate;
}

/* Add dark overlay for the entire page - uses CSS variable for opacity */
.focus-mode::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, var(--focus-overlay-opacity, 0.7));
  pointer-events: none;
  z-index: 1;
  transition: background 0.3s ease;
}

/* Cards default state - behind overlay */
.focus-mode [class*="card"],
.focus-mode [class*="Card"] {
  transition: transform 0.2s ease, box-shadow 0.3s ease;
  position: relative;
  isolation: isolate;
}

/* Hovered card breaks through overlay completely - uses CSS variable for glow intensity */
.focus-mode [class*="card"]:hover,
.focus-mode [class*="Card"]:hover {
  z-index: 999 !important;
  transform: translateY(-2px);
  isolation: isolate;
  box-shadow: 
    0 0 calc(40px * var(--focus-glow-intensity)) calc(15px * var(--focus-glow-intensity)) rgba(255, 215, 0, calc(0.7 * var(--focus-glow-intensity))),
    0 0 calc(80px * var(--focus-glow-intensity)) calc(30px * var(--focus-glow-intensity)) rgba(255, 215, 0, calc(0.5 * var(--focus-glow-intensity))),
    0 0 calc(150px * var(--focus-glow-intensity)) calc(60px * var(--focus-glow-intensity)) rgba(255, 215, 0, calc(0.3 * var(--focus-glow-intensity))),
    0 0 calc(300px * var(--focus-glow-intensity)) calc(100px * var(--focus-glow-intensity)) rgba(255, 215, 0, calc(0.15 * var(--focus-glow-intensity))),
    0 10px 30px -5px rgba(0, 0, 0, 0.4) !important;
}

/* Blue glow */
.focus-glow-blue [class*="card"]:hover,
.focus-glow-blue [class*="Card"]:hover {
  box-shadow: 
    0 0 calc(40px * var(--focus-glow-intensity)) calc(15px * var(--focus-glow-intensity)) rgba(59, 130, 246, calc(0.7 * var(--focus-glow-intensity))),
    0 0 calc(80px * var(--focus-glow-intensity)) calc(30px * var(--focus-glow-intensity)) rgba(59, 130, 246, calc(0.5 * var(--focus-glow-intensity))),
    0 0 calc(150px * var(--focus-glow-intensity)) calc(60px * var(--focus-glow-intensity)) rgba(59, 130, 246, calc(0.3 * var(--focus-glow-intensity))),
    0 0 calc(300px * var(--focus-glow-intensity)) calc(100px * var(--focus-glow-intensity)) rgba(59, 130, 246, calc(0.15 * var(--focus-glow-intensity))),
    0 10px 30px -5px rgba(0, 0, 0, 0.4) !important;
}

/* Green glow */
.focus-glow-green [class*="card"]:hover,
.focus-glow-green [class*="Card"]:hover {
  box-shadow: 
    0 0 calc(40px * var(--focus-glow-intensity)) calc(15px * var(--focus-glow-intensity)) rgba(34, 197, 94, calc(0.7 * var(--focus-glow-intensity))),
    0 0 calc(80px * var(--focus-glow-intensity)) calc(30px * var(--focus-glow-intensity)) rgba(34, 197, 94, calc(0.5 * var(--focus-glow-intensity))),
    0 0 calc(150px * var(--focus-glow-intensity)) calc(60px * var(--focus-glow-intensity)) rgba(34, 197, 94, calc(0.3 * var(--focus-glow-intensity))),
    0 0 calc(300px * var(--focus-glow-intensity)) calc(100px * var(--focus-glow-intensity)) rgba(34, 197, 94, calc(0.15 * var(--focus-glow-intensity))),
    0 10px 30px -5px rgba(0, 0, 0, 0.4) !important;
}

/* Purple glow */
.focus-glow-purple [class*="card"]:hover,
.focus-glow-purple [class*="Card"]:hover {
  box-shadow: 
    0 0 calc(40px * var(--focus-glow-intensity)) calc(15px * var(--focus-glow-intensity)) rgba(168, 85, 247, calc(0.7 * var(--focus-glow-intensity))),
    0 0 calc(80px * var(--focus-glow-intensity)) calc(30px * var(--focus-glow-intensity)) rgba(168, 85, 247, calc(0.5 * var(--focus-glow-intensity))),
    0 0 calc(150px * var(--focus-glow-intensity)) calc(60px * var(--focus-glow-intensity)) rgba(168, 85, 247, calc(0.3 * var(--focus-glow-intensity))),
    0 0 calc(300px * var(--focus-glow-intensity)) calc(100px * var(--focus-glow-intensity)) rgba(168, 85, 247, calc(0.15 * var(--focus-glow-intensity))),
    0 10px 30px -5px rgba(0, 0, 0, 0.4) !important;
}

/* Red glow */
.focus-glow-red [class*="card"]:hover,
.focus-glow-red [class*="Card"]:hover {
  box-shadow: 
    0 0 calc(40px * var(--focus-glow-intensity)) calc(15px * var(--focus-glow-intensity)) rgba(239, 68, 68, calc(0.7 * var(--focus-glow-intensity))),
    0 0 calc(80px * var(--focus-glow-intensity)) calc(30px * var(--focus-glow-intensity)) rgba(239, 68, 68, calc(0.5 * var(--focus-glow-intensity))),
    0 0 calc(150px * var(--focus-glow-intensity)) calc(60px * var(--focus-glow-intensity)) rgba(239, 68, 68, calc(0.3 * var(--focus-glow-intensity))),
    0 0 calc(300px * var(--focus-glow-intensity)) calc(100px * var(--focus-glow-intensity)) rgba(239, 68, 68, calc(0.15 * var(--focus-glow-intensity))),
    0 10px 30px -5px rgba(0, 0, 0, 0.4) !important;
}

/* Rainbow glow */
.focus-glow-rainbow [class*="card"]:hover,
.focus-glow-rainbow [class*="Card"]:hover {
  box-shadow: 
    0 0 calc(50px * var(--focus-glow-intensity)) calc(20px * var(--focus-glow-intensity)) rgba(255, 0, 0, calc(0.6 * var(--focus-glow-intensity))),
    0 0 calc(80px * var(--focus-glow-intensity)) calc(35px * var(--focus-glow-intensity)) rgba(255, 154, 0, calc(0.5 * var(--focus-glow-intensity))),
    0 0 calc(120px * var(--focus-glow-intensity)) calc(50px * var(--focus-glow-intensity)) rgba(255, 255, 0, calc(0.4 * var(--focus-glow-intensity))),
    0 0 calc(170px * var(--focus-glow-intensity)) calc(70px * var(--focus-glow-intensity)) rgba(0, 255, 0, calc(0.4 * var(--focus-glow-intensity))),
    0 0 calc(230px * var(--focus-glow-intensity)) calc(90px * var(--focus-glow-intensity)) rgba(0, 0, 255, calc(0.3 * var(--focus-glow-intensity))),
    0 0 calc(300px * var(--focus-glow-intensity)) calc(110px * var(--focus-glow-intensity)) rgba(128, 0, 255, calc(0.2 * var(--focus-glow-intensity))),
    0 10px 30px -5px rgba(0, 0, 0, 0.4) !important;
}

/* Trans flag glow */
.focus-glow-trans [class*="card"]:hover,
.focus-glow-trans [class*="Card"]:hover {
  box-shadow: 
    0 0 calc(50px * var(--focus-glow-intensity)) calc(20px * var(--focus-glow-intensity)) rgba(91, 206, 250, calc(0.7 * var(--focus-glow-intensity))),
    0 0 calc(90px * var(--focus-glow-intensity)) calc(40px * var(--focus-glow-intensity)) rgba(245, 169, 184, calc(0.6 * var(--focus-glow-intensity))),
    0 0 calc(140px * var(--focus-glow-intensity)) calc(60px * var(--focus-glow-intensity)) rgba(255, 255, 255, calc(0.5 * var(--focus-glow-intensity))),
    0 0 calc(200px * var(--focus-glow-intensity)) calc(80px * var(--focus-glow-intensity)) rgba(245, 169, 184, calc(0.5 * var(--focus-glow-intensity))),
    0 0 calc(270px * var(--focus-glow-intensity)) calc(100px * var(--focus-glow-intensity)) rgba(91, 206, 250, calc(0.4 * var(--focus-glow-intensity))),
    0 10px 30px -5px rgba(0, 0, 0, 0.4) !important;
}

/* No glow */
.focus-glow-none [class*="card"]:hover,
.focus-glow-none [class*="Card"]:hover {
  box-shadow: 0 10px 30px -5px rgba(0, 0, 0, 0.4) !important;
}

/* Create a white backdrop for hovered card to block overlay */
.focus-mode [class*="card"]:hover::before,
.focus-mode [class*="Card"]:hover::before {
  content: '';
  position: absolute;
  inset: 0;
  background: hsl(var(--card));
  border-radius: inherit;
  z-index: -1;
}

/* Buttons default state - behind overlay */
.focus-mode button,
.focus-mode [role="button"] {
  transition: transform 0.2s ease, box-shadow 0.3s ease;
  position: relative;
  isolation: isolate;
}

/* Hovered button breaks through overlay with glow */
.focus-mode button:hover,
.focus-mode [role="button"]:hover {
  z-index: 999 !important;
  transform: translateY(-2px);
  isolation: isolate;
  box-shadow: 
    0 0 calc(30px * var(--focus-glow-intensity)) calc(10px * var(--focus-glow-intensity)) rgba(255, 215, 0, calc(0.8 * var(--focus-glow-intensity))),
    0 0 calc(60px * var(--focus-glow-intensity)) calc(20px * var(--focus-glow-intensity)) rgba(255, 215, 0, calc(0.6 * var(--focus-glow-intensity))),
    0 0 calc(100px * var(--focus-glow-intensity)) calc(40px * var(--focus-glow-intensity)) rgba(255, 215, 0, calc(0.4 * var(--focus-glow-intensity))),
    0 0 calc(200px * var(--focus-glow-intensity)) calc(60px * var(--focus-glow-intensity)) rgba(255, 215, 0, calc(0.2 * var(--focus-glow-intensity))),
    0 8px 20px -3px rgba(0, 0, 0, 0.4) !important;
}

/* Blue glow for buttons */
.focus-glow-blue button:hover,
.focus-glow-blue [role="button"]:hover {
  box-shadow: 
    0 0 calc(30px * var(--focus-glow-intensity)) calc(10px * var(--focus-glow-intensity)) rgba(59, 130, 246, calc(0.8 * var(--focus-glow-intensity))),
    0 0 calc(60px * var(--focus-glow-intensity)) calc(20px * var(--focus-glow-intensity)) rgba(59, 130, 246, calc(0.6 * var(--focus-glow-intensity))),
    0 0 calc(100px * var(--focus-glow-intensity)) calc(40px * var(--focus-glow-intensity)) rgba(59, 130, 246, calc(0.4 * var(--focus-glow-intensity))),
    0 0 calc(200px * var(--focus-glow-intensity)) calc(60px * var(--focus-glow-intensity)) rgba(59, 130, 246, calc(0.2 * var(--focus-glow-intensity))),
    0 8px 20px -3px rgba(0, 0, 0, 0.4) !important;
}

/* Green glow for buttons */
.focus-glow-green button:hover,
.focus-glow-green [role="button"]:hover {
  box-shadow: 
    0 0 calc(30px * var(--focus-glow-intensity)) calc(10px * var(--focus-glow-intensity)) rgba(34, 197, 94, calc(0.8 * var(--focus-glow-intensity))),
    0 0 calc(60px * var(--focus-glow-intensity)) calc(20px * var(--focus-glow-intensity)) rgba(34, 197, 94, calc(0.6 * var(--focus-glow-intensity))),
    0 0 calc(100px * var(--focus-glow-intensity)) calc(40px * var(--focus-glow-intensity)) rgba(34, 197, 94, calc(0.4 * var(--focus-glow-intensity))),
    0 0 calc(200px * var(--focus-glow-intensity)) calc(60px * var(--focus-glow-intensity)) rgba(34, 197, 94, calc(0.2 * var(--focus-glow-intensity))),
    0 8px 20px -3px rgba(0, 0, 0, 0.4) !important;
}

/* Purple glow for buttons */
.focus-glow-purple button:hover,
.focus-glow-purple [role="button"]:hover {
  box-shadow: 
    0 0 calc(30px * var(--focus-glow-intensity)) calc(10px * var(--focus-glow-intensity)) rgba(168, 85, 247, calc(0.8 * var(--focus-glow-intensity))),
    0 0 calc(60px * var(--focus-glow-intensity)) calc(20px * var(--focus-glow-intensity)) rgba(168, 85, 247, calc(0.6 * var(--focus-glow-intensity))),
    0 0 calc(100px * var(--focus-glow-intensity)) calc(40px * var(--focus-glow-intensity)) rgba(168, 85, 247, calc(0.4 * var(--focus-glow-intensity))),
    0 0 calc(200px * var(--focus-glow-intensity)) calc(60px * var(--focus-glow-intensity)) rgba(168, 85, 247, calc(0.2 * var(--focus-glow-intensity))),
    0 8px 20px -3px rgba(0, 0, 0, 0.4) !important;
}

/* Red glow for buttons */
.focus-glow-red button:hover,
.focus-glow-red [role="button"]:hover {
  box-shadow: 
    0 0 calc(30px * var(--focus-glow-intensity)) calc(10px * var(--focus-glow-intensity)) rgba(239, 68, 68, calc(0.8 * var(--focus-glow-intensity))),
    0 0 calc(60px * var(--focus-glow-intensity)) calc(20px * var(--focus-glow-intensity)) rgba(239, 68, 68, calc(0.6 * var(--focus-glow-intensity))),
    0 0 calc(100px * var(--focus-glow-intensity)) calc(40px * var(--focus-glow-intensity)) rgba(239, 68, 68, calc(0.4 * var(--focus-glow-intensity))),
    0 0 calc(200px * var(--focus-glow-intensity)) calc(60px * var(--focus-glow-intensity)) rgba(239, 68, 68, calc(0.2 * var(--focus-glow-intensity))),
    0 8px 20px -3px rgba(0, 0, 0, 0.4) !important;
}

/* Rainbow glow for buttons */
.focus-glow-rainbow button:hover,
.focus-glow-rainbow [role="button"]:hover {
  box-shadow: 
    0 0 calc(35px * var(--focus-glow-intensity)) calc(12px * var(--focus-glow-intensity)) rgba(255, 0, 0, calc(0.7 * var(--focus-glow-intensity))),
    0 0 calc(55px * var(--focus-glow-intensity)) calc(22px * var(--focus-glow-intensity)) rgba(255, 154, 0, calc(0.6 * var(--focus-glow-intensity))),
    0 0 calc(80px * var(--focus-glow-intensity)) calc(35px * var(--focus-glow-intensity)) rgba(255, 255, 0, calc(0.5 * var(--focus-glow-intensity))),
    0 0 calc(110px * var(--focus-glow-intensity)) calc(50px * var(--focus-glow-intensity)) rgba(0, 255, 0, calc(0.5 * var(--focus-glow-intensity))),
    0 0 calc(150px * var(--focus-glow-intensity)) calc(65px * var(--focus-glow-intensity)) rgba(0, 0, 255, calc(0.4 * var(--focus-glow-intensity))),
    0 0 calc(200px * var(--focus-glow-intensity)) calc(80px * var(--focus-glow-intensity)) rgba(128, 0, 255, calc(0.3 * var(--focus-glow-intensity))),
    0 8px 20px -3px rgba(0, 0, 0, 0.4) !important;
}

/* Trans flag glow for buttons */
.focus-glow-trans button:hover,
.focus-glow-trans [role="button"]:hover {
  box-shadow: 
    0 0 calc(35px * var(--focus-glow-intensity)) calc(12px * var(--focus-glow-intensity)) rgba(91, 206, 250, calc(0.8 * var(--focus-glow-intensity))),
    0 0 calc(60px * var(--focus-glow-intensity)) calc(25px * var(--focus-glow-intensity)) rgba(245, 169, 184, calc(0.7 * var(--focus-glow-intensity))),
    0 0 calc(90px * var(--focus-glow-intensity)) calc(40px * var(--focus-glow-intensity)) rgba(255, 255, 255, calc(0.6 * var(--focus-glow-intensity))),
    0 0 calc(130px * var(--focus-glow-intensity)) calc(55px * var(--focus-glow-intensity)) rgba(245, 169, 184, calc(0.6 * var(--focus-glow-intensity))),
    0 0 calc(180px * var(--focus-glow-intensity)) calc(70px * var(--focus-glow-intensity)) rgba(91, 206, 250, calc(0.5 * var(--focus-glow-intensity))),
    0 8px 20px -3px rgba(0, 0, 0, 0.4) !important;
}

/* No glow for buttons */
.focus-glow-none button:hover,
.focus-glow-none [role="button"]:hover {
  box-shadow: 0 8px 20px -3px rgba(0, 0, 0, 0.4) !important;
}

/* Create a backdrop for hovered button to block overlay */
.focus-mode button:hover::before,
.focus-mode [role="button"]:hover::before {
  content: '';
  position: absolute;
  inset: -2px;
  background: inherit;
  border-radius: inherit;
  z-index: -1;
}

/* Header is dimmed by default - behind overlay */
.focus-mode header {
  position: relative;
}

/* Header brightens when hovered */
.focus-mode header:hover {
  z-index: 999;
  isolation: isolate;
}

/* Create backdrop for hovered header */
.focus-mode header:hover::before {
  content: '';
  position: absolute;
  inset: 0;
  background: hsl(var(--background));
  z-index: -1;
}
